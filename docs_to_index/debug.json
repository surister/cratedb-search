[
  {
    "level": 1,
    "ref": "sharding",
    "section_hierarchy": null,
    "title": "Sharding",
    "content": "",
    "content_html": "<div></div>",
    "metadata": {
      "file_name": "g",
      "root": "e",
      "sub_root": "g"
    }
  },
  {
    "level": 2,
    "ref": "introduction",
    "section_hierarchy": [
      "Sharding"
    ],
    "title": "Introduction",
    "content": "\nEvery table partition is split into a configured\nnumber of shards. Shards are then distributed across the cluster. As nodes are\nadded to the cluster, CrateDB will move shards around to achieve maximum\npossible distribution.\n\nTip\nNon-partitioned tables function as a single partition, so non-partitioned\ntables are still split into the configured number of shards.\n\nShards are transparent at the table-level. You do not need to know about or\nthink about shards when querying a table.\nRead requests are broken down and executed in parallel across multiple shards\non multiple nodes, massively improving read performance.",
    "content_html": "<div><p>\nEvery <a class=\"reference internal\" href=\"partitioned-tables.html#partitioned-tables\"><span class=\"std std-ref\">table partition</span></a> is split into a configured\nnumber of shards. Shards are then distributed across the cluster. As nodes are\nadded to the cluster, CrateDB will move shards around to achieve maximum\npossible distribution.</p><div class=\"admonition tip\">\n\n<p class=\"admonition-title\">Tip</p>\n<p>Non-partitioned tables function as a single partition, so non-partitioned\ntables are still split into the configured number of shards.</p>\n</div><p>\nShards are transparent at the table-level. You do not need to know about or\nthink about shards when querying a table.</p><p>\nRead requests are broken down and executed in parallel across multiple shards\non multiple nodes, massively improving read performance.</p></div>",
    "metadata": {
      "file_name": "a",
      "root": "b",
      "sub_root": "c"
    }
  },
  {
    "level": 2,
    "ref": "number-of-shards",
    "section_hierarchy": [
      "Sharding"
    ],
    "title": "Number of shards",
    "content": "\nThe number of shards can be defined by using the CLUSTERED INTO <number>\nSHARDS statement upon the table creation.\nExample:\ncr> create table my_table5 (\n...   first_column integer\n... ) clustered into 10 shards;\nCREATE OK, 1 row affected (... sec)\n\n\nIf the number of shards is not defined explicitly, the sensible default value\nis applied.\n\nSee also\nCREATE TABLE: CLUSTERED\n\n\nNote\nThe number of shards can be changed after table\ncreation, providing the value is a multiple of\nnumber_of_routing_shards\n(set at table-creation time). Altering the number of shards will put the\ntable into a read-only state until the operation has completed.\n\n\nCaution\nWell tuned shard allocation is vital. Read the\nSharding Guide to make sure you\u2019re getting the best performance out of\nCrateDB.\n",
    "content_html": "<div><p>\nThe number of shards can be defined by using the <code class=\"docutils literal notranslate\"><span class=\"pre\">CLUSTERED</span> <span class=\"pre\">INTO</span> <span class=\"pre\">&lt;number&gt;</span>\n<span class=\"pre\">SHARDS</span></code> statement upon the table creation.</p><p>\nExample:</p><div class=\"highlight-default notranslate\">\n<div class=\"highlight\"><pre><span></span><span class=\"n\">cr</span><span class=\"o\">&gt;</span> <span class=\"n\">create</span> <span class=\"n\">table</span> <span class=\"n\">my_table5</span> <span class=\"p\">(</span>\n<span class=\"o\">...</span>   <span class=\"n\">first_column</span> <span class=\"n\">integer</span>\n<span class=\"o\">...</span> <span class=\"p\">)</span> <span class=\"n\">clustered</span> <span class=\"n\">into</span> <span class=\"mi\">10</span> <span class=\"n\">shards</span><span class=\"p\">;</span>\n<span class=\"n\">CREATE</span> <span class=\"n\">OK</span><span class=\"p\">,</span> <span class=\"mi\">1</span> <span class=\"n\">row</span> <span class=\"n\">affected</span> <span class=\"p\">(</span><span class=\"o\">...</span> <span class=\"n\">sec</span><span class=\"p\">)</span>\n</pre></div>\n</div><p>\nIf the number of shards is not defined explicitly, the sensible default value\nis applied.</p><div class=\"admonition seealso\">\n\n<p class=\"admonition-title\">See also</p>\n<p><a class=\"reference internal\" href=\"../../sql/statements/create-table.html#sql-create-table-clustered\"><span class=\"std std-ref\">CREATE TABLE: CLUSTERED</span></a></p>\n</div><div class=\"admonition note\">\n\n<p class=\"admonition-title\">Note</p>\n<p>The number of shards <a class=\"reference internal\" href=\"alter-table.html#alter-shard-number\"><span class=\"std std-ref\">can be changed</span></a> after table\ncreation, providing the value is a multiple of\n<a class=\"reference internal\" href=\"../../sql/statements/create-table.html#sql-create-table-number-of-routing-shards\"><span class=\"std std-ref\">number_of_routing_shards</span></a>\n(set at table-creation time). Altering the number of shards will put the\ntable into a read-only state until the operation has completed.</p>\n</div><div class=\"admonition caution\">\n\n<p class=\"admonition-title\">Caution</p>\n<p>Well tuned <a class=\"reference internal\" href=\"shard-allocation.html#ddl-shard-allocation\"><span class=\"std std-ref\">shard allocation</span></a> is vital. Read the\n<a class=\"reference external\" href=\"https://crate.io/docs/crate/howtos/en/latest/performance/sharding.html\">Sharding Guide</a> to make sure you\u2019re getting the best performance out of\nCrateDB.</p>\n</div></div>",
    "metadata": {
      "file_name": "a",
      "root": "b",
      "sub_root": "c"
    }
  },
  {
    "level": 2,
    "ref": "routing",
    "section_hierarchy": [
      "Sharding"
    ],
    "title": "Routing",
    "content": "\nGiven a fixed number of primary shards, individual rows can be routed to a\nfixed shard number with a simple formula:\nshard number = hash(routing column) % total primary shards\nWhen hash values are distributed evenly (which will be approximately true in\nmost cases), rows will be distributed evenly amongst the fixed amount of\navailable shards.\nThe routing column can be specified with the\nCLUSTERED clause when creating the table.\nAll rows that have the same routing column row value are stored in the same\nshard. If a primary key has been defined, it\nwill be used as the default routing column, otherwise the internal\ndocument ID is used.\nExample:\ncr> create table my_table6 (\n...   first_column integer,\n...   second_column text\n... ) clustered by (first_column);\nCREATE OK, 1 row affected (... sec)\n\n\nIf primary key constraints are defined, the\nrouting column definition can be omitted as primary key columns are always used\nfor routing by default.\nIf the routing column is defined explicitly, it must match a primary key\ncolumn:\ncr> create table my_table8 (\n...   first_column integer primary key,\n...   second_column text primary key,\n...   third_column text\n... ) clustered by (first_column);\nCREATE OK, 1 row affected (... sec)\n\n\nExample for combining custom routing and shard definition:\ncr> create table my_table9 (\n...   first_column integer primary key,\n...   second_column text primary key,\n...   third_column text\n... ) clustered by (first_column) into 10 shards;\nCREATE OK, 1 row affected (... sec)\n\n",
    "content_html": "<div><p>\nGiven a fixed number of primary shards, individual rows can be routed to a\nfixed shard number with a simple formula:</p><p>\n<em>shard number = hash(routing column) % total primary shards</em></p><p>\nWhen hash values are distributed evenly (which will be approximately true in\nmost cases), rows will be distributed evenly amongst the fixed amount of\navailable shards.</p><p>\nThe <a class=\"reference internal\" href=\"../../appendices/glossary.html#gloss-routing-column\"><span class=\"std std-ref\">routing column</span></a> can be specified with the\n<a class=\"reference internal\" href=\"../../sql/statements/create-table.html#sql-create-table-clustered\"><span class=\"std std-ref\">CLUSTERED</span></a> clause when creating the table.\nAll rows that have the same routing column row value are stored in the same\nshard. If a <a class=\"reference internal\" href=\"../../sql/general/constraints.html#primary-key-constraint\"><span class=\"std std-ref\">primary key</span></a> has been defined, it\nwill be used as the default routing column, otherwise the <a class=\"reference internal\" href=\"system-columns.html#sql-administration-system-column-id\"><span class=\"std std-ref\">internal\ndocument ID</span></a> is used.</p><p>\nExample:</p><div class=\"highlight-default notranslate\">\n<div class=\"highlight\"><pre><span></span><span class=\"n\">cr</span><span class=\"o\">&gt;</span> <span class=\"n\">create</span> <span class=\"n\">table</span> <span class=\"n\">my_table6</span> <span class=\"p\">(</span>\n<span class=\"o\">...</span>   <span class=\"n\">first_column</span> <span class=\"n\">integer</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>   <span class=\"n\">second_column</span> <span class=\"n\">text</span>\n<span class=\"o\">...</span> <span class=\"p\">)</span> <span class=\"n\">clustered</span> <span class=\"n\">by</span> <span class=\"p\">(</span><span class=\"n\">first_column</span><span class=\"p\">);</span>\n<span class=\"n\">CREATE</span> <span class=\"n\">OK</span><span class=\"p\">,</span> <span class=\"mi\">1</span> <span class=\"n\">row</span> <span class=\"n\">affected</span> <span class=\"p\">(</span><span class=\"o\">...</span> <span class=\"n\">sec</span><span class=\"p\">)</span>\n</pre></div>\n</div><p>\nIf <a class=\"reference internal\" href=\"constraints.html#constraints-primary-key\"><span class=\"std std-ref\">primary key constraints</span></a> are defined, the\nrouting column definition can be omitted as primary key columns are always used\nfor routing by default.</p><p>\nIf the routing column is defined explicitly, it must match a primary key\ncolumn:</p><div class=\"highlight-default notranslate\">\n<div class=\"highlight\"><pre><span></span><span class=\"n\">cr</span><span class=\"o\">&gt;</span> <span class=\"n\">create</span> <span class=\"n\">table</span> <span class=\"n\">my_table8</span> <span class=\"p\">(</span>\n<span class=\"o\">...</span>   <span class=\"n\">first_column</span> <span class=\"n\">integer</span> <span class=\"n\">primary</span> <span class=\"n\">key</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>   <span class=\"n\">second_column</span> <span class=\"n\">text</span> <span class=\"n\">primary</span> <span class=\"n\">key</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>   <span class=\"n\">third_column</span> <span class=\"n\">text</span>\n<span class=\"o\">...</span> <span class=\"p\">)</span> <span class=\"n\">clustered</span> <span class=\"n\">by</span> <span class=\"p\">(</span><span class=\"n\">first_column</span><span class=\"p\">);</span>\n<span class=\"n\">CREATE</span> <span class=\"n\">OK</span><span class=\"p\">,</span> <span class=\"mi\">1</span> <span class=\"n\">row</span> <span class=\"n\">affected</span> <span class=\"p\">(</span><span class=\"o\">...</span> <span class=\"n\">sec</span><span class=\"p\">)</span>\n</pre></div>\n</div><p>\nExample for combining custom routing and shard definition:</p><div class=\"highlight-default notranslate\">\n<div class=\"highlight\"><pre><span></span><span class=\"n\">cr</span><span class=\"o\">&gt;</span> <span class=\"n\">create</span> <span class=\"n\">table</span> <span class=\"n\">my_table9</span> <span class=\"p\">(</span>\n<span class=\"o\">...</span>   <span class=\"n\">first_column</span> <span class=\"n\">integer</span> <span class=\"n\">primary</span> <span class=\"n\">key</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>   <span class=\"n\">second_column</span> <span class=\"n\">text</span> <span class=\"n\">primary</span> <span class=\"n\">key</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>   <span class=\"n\">third_column</span> <span class=\"n\">text</span>\n<span class=\"o\">...</span> <span class=\"p\">)</span> <span class=\"n\">clustered</span> <span class=\"n\">by</span> <span class=\"p\">(</span><span class=\"n\">first_column</span><span class=\"p\">)</span> <span class=\"n\">into</span> <span class=\"mi\">10</span> <span class=\"n\">shards</span><span class=\"p\">;</span>\n<span class=\"n\">CREATE</span> <span class=\"n\">OK</span><span class=\"p\">,</span> <span class=\"mi\">1</span> <span class=\"n\">row</span> <span class=\"n\">affected</span> <span class=\"p\">(</span><span class=\"o\">...</span> <span class=\"n\">sec</span><span class=\"p\">)</span>\n</pre></div>\n</div></div>",
    "metadata": {
      "file_name": "a",
      "root": "b",
      "sub_root": "c"
    }
  }
]